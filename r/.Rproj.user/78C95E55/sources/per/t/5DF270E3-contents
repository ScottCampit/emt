---
title: "Keshamouni DEG and identifier mapping"
author: "Scott Campit"
date: "7/24/2020"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Summary
This script performs several preprocessing steps for the Keshamouni EMT dataset, including differential gene expression analysis, mapping probes to appropriate identifiers, etc.

## Download the dataset
First, we should download essential packages, which we'll do using Bioconductor. 
```{r, warning=FALSE, message=FALSE}

# Install Bioconductor if that is not installed yet
if (!requireNamespace("BiocManager", quietly=TRUE))
    install.packages("BiocManager")
BiocManager::install(version = "3.12")

library(BiocManager)

# Install specific packages
lst = c("Biobase", "GEOquery", "limma", "affy", "hgu133plus2cdf")
BiocManager::install(lst, version="devel", quietly=TRUE, clean=TRUE)

library(Biobase)
library(GEOquery)
library(limma)
library(affy)
```
Next, we'll load the RNASeq dataset, which can be acquired from [GSE17708](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE17708)
```{r, warning=FALSE, message=FALSE}
# The CEL files were downloaded from GEO. From here, I am processing the CEL files.
basedir = "/home/scampit/Data/Expression/RNASeq/Keshamouni/raw/CEL"
AffyObj = ReadAffy(celfile.path=basedir)
expressionSet = rma(ab)
```

This expression set will then be read into a dataframe, and mapped by probe IDs.
```{r, warning=FALSE, message=FALSE}

# Make into dataframe
df = data.frame(exprs(expressionSet))
probes = rownames(df)

# Reset row names so that it is the first column
install.packages('data.table')
library(data.table)
df = setDT(df, keep.rownames = TRUE)[]

# Map to identifiers
if (!requireNamespace("BiocManager", quietly = TRUE))
    install.packages("BiocManager")
BiocManager::install("hgu133plus2.db")

library(hgu133plus2.db)
# Create a map of the probes to Entrez and gene symbols
map = select(hgu133plus2.db, keys=probes, 
             columns = c('PROBEID', 'ENTREZID', 'SYMBOL'))

# Map the data
mapped_lst = merge(map, df, by.x="PROBEID", by.y="rn")

# Change the column names
names = c("PROBE", "ENTREZ", "SYMBOL", 
          "0", "0", "0", 
          "0.5", "0.5", "0.5",
          "1", "1", "1", 
          "2", "2", 
          "4", "4", "4", 
          "8", "8", "8", 
          "16", "16", "16",
          "24", "24", "24", 
          "72", "72", "72")

colnames(mapped_lst) = names
```
## Differential expression analysis

```{r, warning=FALSE, message=FALSE}
fct = c("PROBE", "ENTREZ", "SYMBOL")
data = subset(mapped_lst, select=-c(PROBE, ENTREZ, SYMBOL))
names = c("0", "0", "0", 
          "0.5", "0.5", "0.5",
          "1", "1", "1", 
          "2", "2", 
          "4", "4", "4", 
          "8", "8", "8", 
          "16", "16", "16",
          "24", "24", "24", 
          "72", "72", "72")
colnames(data) = names

avg_df = as.data.frame(
  sapply(unique(names(data)),
    function(col) rowMeans(data[, names(data)==col])
  )
)

# Get final dataframe with map
final_df = cbind(map, avg_df)
```

Finally, let's save the data as an excel file and process it later in MATLAB:

```{r}
install.packages('openxlsx')
library(openxlsx)

fileName = "/home/scampit/Data/Expression/RNASeq/Keshamouni/processed/keshamouni_processed.xlsx"
write.xlsx(final_df, fileName)
```
